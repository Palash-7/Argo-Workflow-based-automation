apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: rr-health-only
  namespace: argo
spec:
  serviceAccountName: argo-workflow

  ttlStrategy:
    secondsAfterCompletion: 3600

  podGC:
    strategy: OnWorkflowCompletion

  entrypoint: rr-health-dag

  templates:
  - name: rr-health-dag
    dag:
      tasks:
      - name: cluster-health-check
        template: invoke-python
        arguments:
          parameters:
          - name: action
            value: "health-check"

  - name: invoke-python
    inputs:
      parameters:
      - name: action
    container:
      image: kushsahni1/chaos-sim:latest
      imagePullPolicy: Always  # Force pulling the latest image

      # Add securityContext to fix permissions
      securityContext:
        runAsUser: 0  # Run as root to ensure permissions to write logs
        runAsGroup: 0
        allowPrivilegeEscalation: true

      command:
      - python3
      - /app/rack_resiliency_to_host.py
      args:
      - "{{inputs.parameters.action}}"

      env:
      - name: KUBECONFIG
        value: /home/argo/.kube/config
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName

      volumeMounts:
      - name: log-vol
        mountPath: /app/logs

    nodeSelector:
      kubernetes.io/hostname: master-m003

    # Add tolerations for control-plane
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule

    volumes:
    - name: log-vol
      hostPath:
        path: /home/vagrant/argo-logs/rr-health-only
        type: DirectoryOrCreate 
